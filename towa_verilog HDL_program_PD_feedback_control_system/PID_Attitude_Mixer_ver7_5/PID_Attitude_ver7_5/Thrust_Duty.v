// -------------------------------------------------------------
// 
// File Name: D:\fukuda\B4\HDLCoder\2023_12_15\PID_Attitude\PID_Attitude_Mixer_ver7_5\PID_Attitude_ver7_5\Thrust_Duty.v
// Created: 2024-02-07 16:17:48
// 
// Generated by MATLAB 9.12 and HDL Coder 3.20
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Thrust_Duty
// Source Path: PID_Attitude_ver7_5/Motor_Controller/Thrust_Duty
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Thrust_Duty
          (F_P,
           Duty);


  input   [31:0] F_P;  // single
  output  [31:0] Duty;  // single


  wire [31:0] const_rsvd;  // ufix32
  wire [31:0] const_rsvd_1;  // ufix32
  wire [31:0] kconst;  // ufix32
  wire [31:0] out0;  // ufix32
  wire Out_1;
  wire [31:0] const_expression;  // ufix32
  wire [31:0] Duty_1;  // ufix32
  wire Out_1_1;
  wire [31:0] Duty_2;  // ufix32
  wire [31:0] out0_1;  // ufix32
  wire [31:0] Duty_3;  // ufix32


  assign const_rsvd = 32'h40e00000;



  assign const_rsvd_1 = 32'h00000000;



  assign kconst = 32'hc6005c00;



  nfp_mul_single u_nfp_mul_comp (.nfp_in1(kconst),  // single
                                 .nfp_in2(F_P),  // single
                                 .nfp_out(out0)  // single
                                 );

  nfp_relop_single_block1 u_nfp_relop_comp (.nfp_in1(F_P),  // single
                                            .nfp_in2(const_rsvd_1),  // single
                                            .nfp_out1(Out_1)
                                            );

  assign const_expression = 32'h47871680;



  nfp_add_single u_nfp_add_comp (.nfp_in1(out0),  // single
                                 .nfp_in2(const_expression),  // single
                                 .nfp_out(Duty_1)  // single
                                 );

  nfp_relop_single_block u_nfp_relop_comp_1 (.nfp_in1(F_P),  // single
                                             .nfp_in2(const_rsvd),  // single
                                             .nfp_out1(Out_1_1)
                                             );

  assign Duty_2 = 32'h47985800;



  // 7N以上の時出力85%に固定
  assign out0_1 = (Out_1 == 1'b0 ? Duty_1 :
              Duty_2);



  assign Duty_3 = 32'h46876200;



  assign Duty = (Out_1_1 == 1'b0 ? out0_1 :
              Duty_3);



endmodule  // Thrust_Duty

